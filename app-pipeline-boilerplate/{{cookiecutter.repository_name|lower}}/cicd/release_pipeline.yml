---
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Pipeline to build, deploy, test and promote application.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Repository Settings
        Parameters:
          - ApplicationRepositoryName
          - ConfigurationRepositoryName
          - BranchName
          - GithubOrganization
          - CodestarConnectionId
      - Label:
          default: NonProd test projects
        Parameters:
          - TestingProjectName
          - TestingRepositoryName
          - ExecuteTestsRemotely
      - Label:
          default: Build Compute Settings
        Parameters:
          - BuildComputeConfiguration
          - Environment
      - Label:
          default: Contact details
        Parameters:
          - PipelineNotificationEmail

    ParameterLabels:
      - ArtifactsBucketName:
          default: Bucket storing the CodeBuild and CodePipeline artifacts
      - CloudformationTemplatesBucketName:
          default: Bucket storing the CloudFormation templates and configurations generated
      - NonProdAccountCfnRoleArn:
          default: SSM Path to the NonProd CloudFormation Role ARN
      - NonProdAccountPipelineRoleArn:
          default: SSM Path to the NonProd CodePipeline Role ARN
      - ProdAccountCfnRoleArn:
          default: SSM Path to the Prod CloudFormation Role ARN
      - ProdAccountPipelineRoleArn:
          default: SSM Path to the Prod CodePipeline Role ARN
      - GithubToken:
          default: Name of the GH secret storing the Developer Token
      - GithubOrganization:
          default: Name of the Github organization where the repository resides
      - ExecuteTestsRemotely:
          default: Whether CodePipeline should assume role to execute the build.
Parameters:

  CodestarConnectionId:
    Type: String

  DeploymentName:
    Type: String
    AllowedPattern: "[a-zA-Z0-9-]+$"

  DeployToProd:
    Type: String
    AllowedValues:
      - True
      - False
    Default: False

  PipelineNotificationEmail:
    Type: String

  IamBoundaryPolicyName:
    Type: String
    Default: none
    AllowedPattern: '[a-zA-Z0-9-\/.]+'

  ApplicationRepositoryName:
    Type: String

  TestingRepositoryName:
    Type: String
    Default: none
    AllowedPattern: "[0-9a-zA-Z-.]+"

  TestingProjectName:
    Type: String
    Default: none
    AllowedPattern: "[0-9a-zA-Z-.]+"

  ExecuteTestsRemotely:
    Type: String
    AllowedValues:
      - "True"
      - "False"
    Default: "True"

  ConfigurationRepositoryName:
    Type: String
    Default: none

  BranchName:
    Type: String
    Default: main

  GithubOrganization:
    Type: String
    Default: compose-x

  BuildComputeConfiguration:
    Type: String
    Default: Small
    AllowedValues:
      - Small
      - Medium
      - Large

  Environment:
    Type: String
    Default: aws/codebuild/standard:6.0
    AllowedValues:
      - aws/codebuild/standard:5.0
      - aws/codebuild/standard:6.0
  OpenRequestLambdaArn:
    Type: String
    Default: none

  CloseRequestLambdaArn:
    Type: String
    Default: none

  BuildSpecFile:
    Type: String
    Default: buildspec.yml

Mappings:
  CodeBuild:
    EnvironmentSize:
      Small: BUILD_GENERAL1_SMALL
      Medium: BUILD_GENERAL1_MEDIUM
      Large: BUILD_GENERAL1_LARGE
Conditions:

  NotUseConfigurationSourceRepositoryCondition:
    !Equals [ !Ref ConfigurationRepositoryName, "none" ]

  NotUseTestingProjectCondition:
    !Equals [ !Ref TestingProjectName, "none" ]

  UseTestingProjectCondition: !Not
    - !Condition NotUseTestingProjectCondition

  NotUseTestingRepositoryCondition: !Equals
    - !Ref TestingRepositoryName
    - "none"
  UseTestingRepositoryCondition: !Not
    - !Condition NotUseTestingRepositoryCondition

  UseTestingCondition: !Or
    - !Condition UseTestingRepositoryCondition
    - !Condition UseTestingProjectCondition

  UseConfigurationSourceRepositoryCondition:
    !Not [!Condition NotUseConfigurationSourceRepositoryCondition]

  DeployToProdCondition: !Equals
    - !Ref DeployToProd
    - True

  ExecuteTestsRemotelyCondition: !Equals
    - !Ref ExecuteTestsRemotely
    - "True"

Resources:
  KmsKeyAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'CicdKmsKeyAccess'
      Roles:
        - !Ref CodeBuildRole
        - !Ref CodePipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DecryptEncryptArtifacts
            Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource:
              - !ImportValue "CICD::mgmt::KMS::Key::Arn"

  S3BucketsReadAccess:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref CodeBuildRole
        - !Ref CodePipelineRole
      PolicyName: S3CicdBucketsReadAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowRwToArtifactsBucket
            Action:
              - s3:ListBucket
              - s3:GetBucket*
            Effect: Allow
            Resource:
              - !ImportValue "CICD::mgmt::Bucket::Artifacts::Arn"
              - !ImportValue "CICD::mgmt::Bucket::CfnTemplates::Arn"
          - Sid: GetCloudformationTemplates
            Action:
              - s3:GetObject*
              - s3:ListBucket
              - s3:GetBucket*
              - s3:PutObject*
            Effect: Allow
            Resource:
              - Fn::Sub:
                  - '${ArtifactsBucketArn}/*'
                  - ArtifactsBucketArn: !ImportValue "CICD::mgmt::Bucket::Artifacts::Arn"
              - Fn::Sub:
                  - '${CloudformationTemplatesBucketArn}/*'
                  - CloudformationTemplatesBucketArn: !ImportValue "CICD::mgmt::Bucket::CfnTemplates::Arn"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${IamBoundaryPolicyName}'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonInspector2FullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codebuild.${AWS::URLSuffix}'
      Policies:
        - PolicyName: CodeBuildDefaultAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: SSMAccess
                Effect: Allow
                Action:
                  - ssm:GetParameter*
                Resource:
                  - "*"
              - Sid: CodeBuildAccess
                Effect: Allow
                Resource:
                  - "*"
                Action:
                  - codebuild:*
              - Sid: CodeBuildDeny
                Action:
                  - codebuild:Delete*
                Effect: Deny
                Resource:
                  - "*"
              - Sid: Ec2BasicReads
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeRegion*
              - Sid: CloudFormationActions
                Effect: Allow
                Resource: '*'
                Action:
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:Validate*
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ECRLoginAccess
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ecr:GetAuthorizationToken
              - Sid: RWToECR
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/*'
                Action: [
                  "ecr:PutImageTagMutability",
                  "ecr:ListTagsForResource",
                  "ecr:UploadLayerPart",
                  "ecr:BatchDeleteImage",
                  "ecr:ListImages",
                  "ecr:CompleteLayerUpload",
                  "ecr:TagResource",
                  "ecr:DescribeRepositories",
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:PutImage",
                  "ecr:UntagResource",
                  "ecr:BatchGetImage",
                  "ecr:DescribeImages",
                  "ecr:InitiateLayerUpload",
                ]
              - Sid: PullFromAnyECR
                Effect: Allow
                Resource:
                  - "*"
                Action: [
                  "ecr:ListTagsForResource",
                  "ecr:ListImages",
                  "ecr:DescribeRepositories",
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:DescribeImageScanFindings",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:BatchGetImage",
                  "ecr:DescribeImages",
                  "ecr:GetRepositoryPolicy"
                ]
                Condition:
                  Bool:
                    aws:SecureTransport: true
        - PolicyName: AssumeReadonlyRoles
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: "AllowAssumeRoleToReadonlyRole"
                Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !ImportValue 'CICD::prod::ReadOnly::Role::Arn'
                  - !ImportValue 'CICD::nonprod::ReadOnly::Role::Arn'
                Condition:
                  Bool:
                    aws:SecureTransport: true
        - PolicyName: AccessToCodeartifact
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AuthAccess
                Action:
                  - codeartifact:GetAuthorizationToken
                  - sts:GetServiceBearerToken
                Effect: Allow
                Resource:
                  - "*"
              - Sid: RepositoryRead
                Effect: Allow
                Action:
                  - codeartifact:List*
                  - codeartifact:Describe*
                  - codeartifact:Get*
                  - codeartifact:Read*
                Resource:
                  - "*"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${IamBoundaryPolicyName}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codepipeline.${AWS::URLSuffix}'
            Condition:
              Bool:
                aws:SecureTransport: true
      Policies:
        - PolicyName: CrossAccountAssume
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !ImportValue 'CICD::prod::Pipeline::Role::Arn'
                  - !ImportValue 'CICD::nonprod::Pipeline::Role::Arn'
                Condition:
                  Bool:
                    aws:SecureTransport: true
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CodeBuildAccess
                Effect: Allow
                Resource:
                  - "*"
                Action:
                  - codebuild:*
              - Sid: CodeBuildDeny
                Action:
                  - codebuild:Delete*
                Effect: Deny
                Resource:
                  - "*"
        - PolicyName: SNSPublish
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref PipelineNotifications
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - '*'
                Sid: InvokeAnyFunction

  PipelineNotifications:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub '${AWS::StackName}PipelineTopic'
      Subscription:
        - Endpoint: !Ref PipelineNotificationEmail
          Protocol: email

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: CodeStarAccess
        Version: 2012-10-17
        Statement:
          - Sid: __default_statement_ID
            Effect: Allow
            Action:
              - "SNS:GetTopicAttributes"
              - "SNS:SetTopicAttributes"
              - "SNS:AddPermission"
              - "SNS:RemovePermission"
              - "SNS:DeleteTopic"
              - "SNS:Subscribe"
              - "SNS:ListSubscriptionsByTopic"
              - "SNS:Publish"
              - "SNS:Receive"
            Resource: !Ref PipelineNotifications
            Principal:
              AWS: "*"
            Condition:
              StringEquals:
                AWS:SourceOwner: !Ref "AWS::AccountId"
          - Sid: AccessForCodeStarNotifications
            Effect: Allow
            Action:
              - SNS:Publish
            Principal:
              Service:
                !Sub 'codestar-notifications.${AWS::URLSuffix}'
            Resource: !Ref PipelineNotifications
      Topics:
        - !Ref PipelineNotifications

  #  PipelineStatusNotify:
  #    Type: AWS::CodeStarNotifications::NotificationRule
  #    Properties:
  #      DetailType: FULL
  #      EventTypeIds:
  #        - codepipeline-pipeline-stage-execution-succeeded
  #        - codepipeline-pipeline-stage-execution-failed
  #        - codepipeline-pipeline-pipeline-execution-failed
  #        - codepipeline-pipeline-pipeline-execution-succeeded
  #        - codepipeline-pipeline-manual-approval-needed
  #      Name: !If
  #        - DeployToProdCondition
  #        - !Sub '${AWS::StackName}Notify'
  #        - !Sub '${AWS::StackName}NotifyDevStaging'
  #      Resource: !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ReleasePipeline}'
  #      Status: ENABLED
  #      Tags:
  #        environment: !Ref EnvironmentTag
  #        costcentre: !Ref CostcentreTag
  #      Targets:
  #        - TargetType: SNS
  #          TargetAddress: !Ref PipelineNotifications

  ApplicationBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'Build-${ApplicationRepositoryName}'
      EncryptionKey: !ImportValue "CICD::mgmt::KMS::Key::Arn"
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Description: !Sub 'Executes build for ${ApplicationRepositoryName}'
      Environment:
        ComputeType: !FindInMap [ "CodeBuild", "EnvironmentSize", !Ref BuildComputeConfiguration ]
        Image: !Ref Environment
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Type: PLAINTEXT
            Value: !ImportValue "CICD::mgmt::Bucket::Artifacts::Name"
          - Name: CFN_TPL_BUCKET
            Type: PLAINTEXT
            Value: !ImportValue "CICD::mgmt::Bucket::CfnTemplates::Name"
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref 'AWS::AccountId'
          - Name: MICROSERVICE_NAME
            Type: PLAINTEXT
            Value: !Ref ApplicationRepositoryName
          - Name: PROD_RO_ROLE_ARN
            Type: PLAINTEXT
            Value: !ImportValue 'CICD::prod::ReadOnly::Role::Arn'
          - Name: NONPROD_RO_ROLE_ARN
            Value: !ImportValue 'CICD::nonprod::ReadOnly::Role::Arn'
            Type: PLAINTEXT
          - Name: DEPLOYMENT_NAME
            Value: !Ref DeploymentName
            Type: PLAINTEXT

      Cache:
        Location: !Sub
          - "${BucketName}/codebuild-caching/${AWS::StackName}"
          - BucketName: !ImportValue "CICD::mgmt::Bucket::Artifacts::Name"
        Type: S3
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFile

  ReleasePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - S3BucketsReadAccess
      - KmsKeyAccessPolicy
      - CodePipelineRole
      - CodeBuildRole
      - ApplicationBuild
    Properties:
      ArtifactStore:
        Location: !ImportValue "CICD::mgmt::Bucket::Artifacts::Name"
        EncryptionKey:
          Id: !ImportValue "CICD::mgmt::KMS::Key::Arn"
          Type: KMS
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      Stages:
        - Name: PipelineSource
          Actions:
            - Name: ApplicationSourceCode
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CodestarConnectionId
                FullRepositoryId: !Sub "${GithubOrganization}/${ApplicationRepositoryName}"
                BranchName: !Ref BranchName
                OutputArtifactFormat: "CODEBUILD_CLONE_REF"
              OutputArtifacts:
                - Name: AppSourceCode
              RunOrder: '1'
            - Fn::If:
                - UseTestingRepositoryCondition
                - Name: "TestSourceCode"
                  ActionTypeId:
                    Category: Source
                    Owner: AWS
                    Provider: CodeStarSourceConnection
                    Version: '1'
                  Configuration:
                    ConnectionArn: !Ref CodestarConnectionId
                    FullRepositoryId: !Sub "${GithubOrganization}/${TestingRepositoryName}"
                    BranchName: !Ref BranchName
                    OutputArtifactFormat: "CODEBUILD_CLONE_REF"
                  OutputArtifacts:
                    - Name: TestSourceCode
                  RunOrder: '1'
                - !Ref "AWS::NoValue"
            - Fn::If:
                - NotUseConfigurationSourceRepositoryCondition
                - !Ref 'AWS::NoValue'
                - Name: ConfigurationSourceCode
                  ActionTypeId:
                    Version: '1'
                    Owner: AWS
                    Category: Source
                    Provider: CodeStarSourceConnection
                  Configuration:
                    ConnectionArn: !Ref CodestarConnectionId
                    FullRepositoryId: !Sub "${GithubOrganization}/${ConfigurationRepositoryName}"
                    BranchName: !Ref BranchName
                    OutputArtifactFormat: "CODEBUILD_CLONE_REF"
                  OutputArtifacts:
                    - Name: ConfigurationSourceCode
                  RunOrder: '1'
        - Name: 'ApplicationBuildArtifact'
          Actions:
            - Name: ApplicationBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref ApplicationBuild
              InputArtifacts:
                - Name: AppSourceCode
              OutputArtifacts:
                - Name: AppDefinition
              RunOrder: '1'
        - Name: 'DeployToDev'
          Actions:
            - Name: CfnDeployToDev
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !ImportValue 'CICD::nonprod::Cfn::Role::Arn'
                StackName: !Sub '${DeploymentName}-dev'
                TemplatePath: !Sub 'AppDefinition::dev/${DeploymentName}.yaml'
                OutputFileName: outputs.json
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: AppDefinition
                - Fn::If:
                    - NotUseConfigurationSourceRepositoryCondition
                    - !Ref 'AWS::NoValue'
                    - Name: ConfigurationSourceCode
              OutputArtifacts:
                - Name: DevStackOutputs
              RunOrder: '1'
              RoleArn: !ImportValue 'CICD::nonprod::Pipeline::Role::Arn'
        - Fn::If:
            - UseTestingProjectCondition
            - Name: 'TestDevEnvironment'
              Actions:
                - Name: BuildApplication
                  ActionTypeId:
                    Category: Test
                    Owner: AWS
                    Provider: CodeBuild
                    Version: '1'
                  Configuration:
                    ProjectName: !Ref TestingProjectName
                    PrimarySource: !If
                      - UseTestingRepositoryCondition
                      - TestSourceCode
                      - AppSourceCode
                  InputArtifacts:
                    - Name: !If [ UseTestingRepositoryCondition, TestSourceCode, AppSourceCode]
                    - Name: DevStackOutputs
                  RunOrder: '2'
                  RoleArn: !If
                    - ExecuteTestsRemotelyCondition
                    - !ImportValue 'CICD::nonprod::Pipeline::Role::Arn'
                    - !Ref "AWS::NoValue"
            - !Ref "AWS::NoValue"
        - Name: 'DeployToStaging'
          Actions:
            - Name: IdentifyChanges
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub '${DeploymentName}StagingChanges'
                RoleArn: !ImportValue 'CICD::nonprod::Cfn::Role::Arn'
                StackName: !Sub '${DeploymentName}-stg'
                TemplatePath: !Sub 'AppDefinition::stg/${DeploymentName}.yaml'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: AppDefinition
                - Fn::If:
                    - NotUseConfigurationSourceRepositoryCondition
                    - !Ref 'AWS::NoValue'
                    - Name: ConfigurationSourceCode
              RunOrder: '1'
              RoleArn: !ImportValue 'CICD::nonprod::Pipeline::Role::Arn'
            - Name: RequestApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref 'PipelineNotifications'
              RunOrder: '2'
            - Name: DeployToStaging
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub '${DeploymentName}StagingChanges'
                RoleArn: !ImportValue 'CICD::nonprod::Cfn::Role::Arn'
                StackName: !Sub '${DeploymentName}-stg'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              OutputArtifacts:
                - Name: StagingStackOutput
              RunOrder: '3'
              RoleArn: !ImportValue 'CICD::nonprod::Pipeline::Role::Arn'
        - Fn::If:
            - DeployToProdCondition
            - Name: 'DeployToProduction'
              Actions:
                - Name: IdentifyChanges
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_REPLACE
                    ChangeSetName: !Sub '${DeploymentName}ProdChanges'
                    RoleArn: !ImportValue 'CICD::prod::Cfn::Role::Arn'
                    StackName: !Sub '${DeploymentName}-prod'
                    TemplatePath: !Sub 'AppDefinition::prod/${DeploymentName}.yaml'
                    Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
                  InputArtifacts:
                    - Name: AppDefinition
                    - Fn::If:
                        - NotUseConfigurationSourceRepositoryCondition
                        - !Ref 'AWS::NoValue'
                        - Name: ConfigurationSourceCode
                  RunOrder: '1'
                  RoleArn: !ImportValue 'CICD::prod::Pipeline::Role::Arn'

                - Name: RequestApproval
                  ActionTypeId:
                    Category: Approval
                    Owner: AWS
                    Provider: Manual
                    Version: '1'
                  Configuration:
                    NotificationArn: !Ref 'PipelineNotifications'
                  RunOrder: '2'
                - Name: DeployToProd
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_EXECUTE
                    ChangeSetName: !Sub '${DeploymentName}ProdChanges'
                    RoleArn: !ImportValue 'CICD::prod::Cfn::Role::Arn'
                    StackName: !Sub '${DeploymentName}-prod'
                    Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
                  OutputArtifacts:
                    - Name: ProdStackOutput
                  RunOrder: 3
                  RoleArn: !ImportValue 'CICD::prod::Pipeline::Role::Arn'
            - !Ref "AWS::NoValue"

  CodeStarAccess:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref CodeBuildRole
        - !Ref CodePipelineRole
      PolicyName: CodeStarAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CodeStarAccess
            Effect: Allow
            Resource:
              - !Ref CodestarConnectionId
            Action:
              - codestar-connections:UseConnection
